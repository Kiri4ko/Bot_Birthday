"""Handler start. """

from aiogram.types import (
    CallbackQuery,
    Message,
    ReplyKeyboardRemove,
    InputFile,
)

from buttons.buttons import *

from aiogram import Dispatcher

from aiogram.dispatcher import FSMContext

from aiogram.dispatcher.filters import Text

from aiogram.dispatcher.filters.state import StatesGroup, State

from aiogram_calendar import dialog_cal_callback, DialogCalendar


class Authorization(StatesGroup):
    auth_user = State()


async def command_auth_handler(message: Message):
    await message.delete()
    await message.answer_sticker('CAACAgIAAxkBAAEF4AFjJ4JWO1pIKtf5I4jDPPXNz7eZgAAChwIAAladvQpC7XQrQFfQkCkE')
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, *{message.from_user.first_name}*‚úå\!\n"
        "–Ø –≤–æ—Å–ø–∏—Ç–∞–Ω–Ω—ã–π –±–æ—Ç–∏–∫, –ø–æ—ç—Ç–æ–º—É –Ω–µ –±—É–¥—É —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –≥–æ–¥–∏–∫–æ–≤üòá\n"
        "–ü–æ—Å—á–∏—Ç–∞—é —Å–∞–º, –¥–ª—è —ç—Ç–æ–≥–æ —É–∫–∞–∂–∏ –¥–∞—Ç—É —Å–≤–æ–µ–≥–æ —Ä–æ–∂–¥–µ–Ω–∏—è \- –∏—Å–ø–æ–ª—å–∑—É—è –∫–∞–ª–µ–Ω–¥–∞—Ä—å üóì",
        reply_markup=await DialogCalendar().start_calendar()
    )


async def command_auth_handler_call(call: CallbackQuery):
    await call.message.answer_sticker('CAACAgIAAxkBAAEF4AFjJ4JWO1pIKtf5I4jDPPXNz7eZgAAChwIAAladvQpC7XQrQFfQkCkE')
    await call.message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, *{call.from_user.first_name}*‚úå\!\n"
        "–Ø –≤–æ—Å–ø–∏—Ç–∞–Ω–Ω—ã–π –±–æ—Ç–∏–∫, –ø–æ—ç—Ç–æ–º—É –Ω–µ –±—É–¥—É —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –≥–æ–¥–∏–∫–æ–≤üòá\n"
        "–ü–æ—Å—á–∏—Ç–∞—é —Å–∞–º, –¥–ª—è —ç—Ç–æ–≥–æ —É–∫–∞–∂–∏ –¥–∞—Ç—É —Å–≤–æ–µ–≥–æ —Ä–æ–∂–¥–µ–Ω–∏—è \- –∏—Å–ø–æ–ª—å–∑—É—è –∫–∞–ª–µ–Ω–¥–∞—Ä—å üóì",
        reply_markup=await DialogCalendar().start_calendar()
    )


async def process_dialog_calendar(call: CallbackQuery, callback_data: {}, state: FSMContext):
    selected, date = await DialogCalendar().process_selection(call, callback_data)
    if selected:
        await state.update_data(user_date=str(date.strftime("%d/%m/%Y")))
        await call.message.answer(
            f'*–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è*: {date.strftime("%d/%m/%Y")} \- —É–∫–∞–∑–∞–Ω–∞ –≤–µ—Ä–Ω–æ‚ùì',
            reply_markup=inline_buttons_birthday
        )


async def command_start_handler(call: CallbackQuery, state: FSMContext):
    date = await state.get_data()
    if date.get('user_date') != "09/11/1992":
        await call.message.answer_sticker('CAACAgEAAxkBAAEGNlBjWiIi-UPJBPb3kSAl7j7GBqEcpwACKAADOA6CEeJAhB3GAAE0IioE')
        await call.message.answer(
            f"–£–ø—Å\.\.\. –î–ª—è –í–∞—Å *{call.from_user.first_name}*, –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ\!\n",
            reply_markup=inline_buttons_repeat
        )
        await state.finish()
        return
    else:
        await call.message.answer_sticker('CAACAgIAAxkBAAEGMShjV6AxD4c7gnOqPBsAAZ_PSa9zzvMAAosCAAJWnb0K97RiJg2PO_MqBA')
        photo = InputFile('static/media/olya_avatar.jpg')
        await call.message.answer_photo(photo=photo, caption=
        f"–ü—Ä–∏–≤–µ—Ç, *–û–ª–µ—á–∫–∞*‚úå\! üòç\n"
        "*–° –î–ù–Å–ú –†–û–ñ–î–ï–ù–ò–Ø* üéÇ\n"
        "–Ø —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π –±–æ—Ç–∏–∫ ü§ñ\.\n"
        "–¢–≤–æ–∏ —Å–∞–º—ã–µ –±–ª–∏–∑–∫–∏–µ –∏ –ª—é–±–∏–º—ã–µ \- –Ω–µ –±–µ–∑ –º–æ–µ–π –ø–æ–º–æ—â–∏, –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ —Å—é—Ä–ø—Ä–∏–∑ üéÅ\.\n"
        "–ß—Ç–æ–±—ã –µ–≥–æ –ø–æ–ª—É—á–∏—Ç—å, –Ω–∞–¥–æ —Å—ã–≥—Ä–∞—Ç—å  —Å–æ –º–Ω–æ–π –≤ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É üéÆ\.\n"
        f"–ï—Å–ª–∏ –≥–æ—Ç–æ–≤–∞, –∂–º–∏ \|*–•–æ—á—É —Å—é—Ä–ø—Ä–∏–∑* üéÅ\| –∏ –ø–æ–ª–µ—Ç–µ–ª–∏üöÄüåîüëá",
                                        reply_markup=inline_buttons_start
                                        )
        await state.finish()


async def cmd_cancel_handler(message: Message, state: FSMContext):
    await message.answer("–¢–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ \- –æ—Ç–º–µ–Ω–µ–Ω–æ üõë", reply_markup=ReplyKeyboardRemove())
    await message.bot.delete_message(message.chat.id, message.message_id)
    await state.finish()


def register_handlers_common(dp: Dispatcher):
    dp.register_message_handler(command_auth_handler, commands="start", state="*")
    dp.register_callback_query_handler(process_dialog_calendar, dialog_cal_callback.filter())
    dp.register_message_handler(cmd_cancel_handler, commands="cancel", state="*")
    dp.register_message_handler(cmd_cancel_handler, Text(equals="cancel", ignore_case=True), state="*")
    dp.register_callback_query_handler(command_start_handler, state=Authorization.auth_user)
